plugins {
    id 'java-library'
    id "io.qameta.allure" version "2.11.0"
}

def allureVersion = "2.21.0",
    selenideVersion = "6.19.1"


allure
        {
            report {
                version.set(allureVersion)
            }
            adapter {
                aspectjWeaver.set(true)
                frameworks {
                    juinit5 {
                        adapterVersion.set(allureVersion)
                    }
                }
            }
        }
repositories {
    mavenCentral()
}
dependencies {
    testImplementation(
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "com.codeborne:selenide:6.19.1",
            "com.github.javafaker:javafaker:1.0.2",
            "org.junit.jupiter:junit-jupiter:5.10.0",
            "org.slf4j:slf4j-simple:2.0.7",
            "org.slf4j:slf4j-a" + "pi:2.0.7")
}
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task smoke(type: Test) {
    useJUnitPlatform {
        includeTags("smoke")
    }
}
task acceptence(type: Test) {
    useJUnitPlatform {
        includeTags("acceptence")
    }
}